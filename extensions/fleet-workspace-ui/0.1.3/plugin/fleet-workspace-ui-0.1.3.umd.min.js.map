{"version":3,"file":"fleet-workspace-ui-0.1.3.umd.min.js","mappings":"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","sources":["webpack://fleet-workspace-ui-0.1.3/webpack/universalModuleDefinition","webpack://fleet-workspace-ui-0.1.3/external umd {\"commonjs\":\"vue\",\"commonjs2\":\"vue\",\"root\":\"Vue\"}","webpack://fleet-workspace-ui-0.1.3/webpack/bootstrap","webpack://fleet-workspace-ui-0.1.3/webpack/runtime/compat get default export","webpack://fleet-workspace-ui-0.1.3/webpack/runtime/create fake namespace object","webpack://fleet-workspace-ui-0.1.3/webpack/runtime/define property getters","webpack://fleet-workspace-ui-0.1.3/webpack/runtime/ensure chunk","webpack://fleet-workspace-ui-0.1.3/webpack/runtime/get javascript chunk filename","webpack://fleet-workspace-ui-0.1.3/webpack/runtime/global","webpack://fleet-workspace-ui-0.1.3/webpack/runtime/hasOwnProperty shorthand","webpack://fleet-workspace-ui-0.1.3/webpack/runtime/load script","webpack://fleet-workspace-ui-0.1.3/webpack/runtime/make namespace object","webpack://fleet-workspace-ui-0.1.3/webpack/runtime/node module decorator","webpack://fleet-workspace-ui-0.1.3/webpack/runtime/publicPath","webpack://fleet-workspace-ui-0.1.3/webpack/runtime/jsonp chunk loading","webpack://fleet-workspace-ui-0.1.3/../../node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://fleet-workspace-ui-0.1.3/../../node_modules/@rancher/shell/core/types.ts","webpack://fleet-workspace-ui-0.1.3/./node_modules/@rancher/auto-import","webpack://fleet-workspace-ui-0.1.3/./index.ts","webpack://fleet-workspace-ui-0.1.3/../../node_modules/@vue/cli-service/lib/commands/build/entry-lib.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vue\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fleet-workspace-ui-0.1.3\"] = factory(require(\"vue\"));\n\telse\n\t\troot[\"fleet-workspace-ui-0.1.3\"] = factory(root[\"Vue\"]);\n})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE__9274__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__9274__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"fleet-workspace-ui-0.1.3.umd.min.\" + (chunkId === 907 ? \"dialog\" : chunkId) + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"fleet-workspace-ui-0.1.3:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t743: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = (typeof self !== 'undefined' ? self : this)[\"webpackChunkfleet_workspace_ui_0_1_3\"] = (typeof self !== 'undefined' ? self : this)[\"webpackChunkfleet_workspace_ui_0_1_3\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","/* eslint-disable no-var */\n// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var currentScript = window.document.currentScript\n  if (process.env.NEED_CURRENTSCRIPT_POLYFILL) {\n    var getCurrentScript = require('@soda/get-current-script')\n    currentScript = getCurrentScript()\n\n    // for backward compatibility, because previously we directly included the polyfill\n    if (!('currentScript' in document)) {\n      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })\n    }\n  }\n\n  var src = currentScript && currentScript.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/)\n  if (src) {\n    __webpack_public_path__ = src[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","import { ProductFunction } from './plugin';\nimport { RouteRecordRaw } from 'vue-router';\n\n// Cluster Provisioning types\nexport * from './types-provisioning';\n\n// package.json metadata\nexport interface PackageMetadata {\n  name: string;\n  version: string;\n  description: string;\n  icon: string;\n}\n\n// export interface Route {\n//   name: string;\n//   path: string;\n//   component: Object | Function,\n//   children: Route[];\n// }\n\nexport type VuexStoreObject = { [key: string]: any }\nexport type CoreStoreSpecifics = { state: () => VuexStoreObject, getters: VuexStoreObject, mutations: VuexStoreObject, actions: VuexStoreObject }\nexport type CoreStoreConfig = { namespace: string, baseUrl?: string, modelBaseClass?: string, supportsStream?: boolean, isClusterStore?: boolean }\nexport type CoreStoreInit = (store: any, ctx: any) => void;\nexport type RegisterStore = () => (store: any) => void\nexport type UnregisterStore = (store: any) => void\n\nexport type PluginRouteRecordRaw = { [key: string]: any }\n\nexport type OnEnterLeavePackageConfig = {\n  clusterId: string,\n  product: string,\n  oldProduct: string,\n  isExt: string,\n  oldIsExt: string\n}\n\nexport type OnNavToPackage = (store: any, config: OnEnterLeavePackageConfig) => Promise<void>;\nexport type OnNavAwayFromPackage = (store: any, config: OnEnterLeavePackageConfig) => Promise<void>;\nexport type OnLogOut = (store: any) => Promise<void>;\n\n/** Enum regarding the extensionable areas/places of the UI */\nexport enum ExtensionPoint {\n  ACTION = 'Action', // eslint-disable-line no-unused-vars\n  TAB = 'Tab', // eslint-disable-line no-unused-vars\n  PANEL = 'Panel', // eslint-disable-line no-unused-vars\n  CARD = 'Card', // eslint-disable-line no-unused-vars\n  TABLE_COL = 'TableColumn', // eslint-disable-line no-unused-vars\n}\n\n/** Enum regarding action locations that are extensionable in the UI */\nexport enum ActionLocation {\n  HEADER = 'header-action', // eslint-disable-line no-unused-vars\n  TABLE = 'table-action', // eslint-disable-line no-unused-vars\n}\n\n/** Enum regarding panel locations that are extensionable in the UI */\nexport enum PanelLocation {\n  DETAILS_MASTHEAD = 'details-masthead', // eslint-disable-line no-unused-vars\n  DETAIL_TOP = 'detail-top', // eslint-disable-line no-unused-vars\n  RESOURCE_LIST = 'resource-list', // eslint-disable-line no-unused-vars\n}\n\n/** Enum regarding tab locations that are extensionable in the UI */\nexport enum TabLocation {\n  RESOURCE_DETAIL = 'tab', // eslint-disable-line no-unused-vars\n  CLUSTER_CREATE_RKE2 = 'cluster-create-rke2', // eslint-disable-line no-unused-vars\n}\n\n/** Enum regarding card locations that are extensionable in the UI */\nexport enum CardLocation {\n  CLUSTER_DASHBOARD_CARD = 'cluster-dashboard-card', // eslint-disable-line no-unused-vars\n}\n\n/** Enum regarding table col locations that are extensionable in the UI */\nexport enum TableColumnLocation {\n  RESOURCE = 'resource-list', // eslint-disable-line no-unused-vars\n}\n\n/** Definition of the shortcut object (keyboard shortcuts) */\nexport type ShortCutKey = {\n  windows?: string[];\n  mac?: string[];\n};\n\n/** Definition of the action options (table actions) */\nexport type ActionOpts = {\n  event: any;\n  isAlt: boolean;\n  action: any;\n};\n\n/** Definition of an extension action (options that can be passed when setting an extension action) */\nexport type Action = {\n  label?: string;\n  labelKey?: string;\n  tooltipKey?: string;\n  tooltip?: string;\n  shortcut?: string | ShortCutKey;\n  svg?: Function;\n  icon?: string;\n  multiple?: boolean;\n  enabled?: Function | boolean;\n  invoke: (opts: ActionOpts, resources: any[], globals?: any) => void | boolean | Promise<boolean>;\n};\n\n/** Definition of a panel (options that can be passed when defining an extension panel enhancement) */\nexport type Panel = {\n  component: Function;\n};\n\n/** Definition of a card (options that can be passed when defining an extension card enhancement) */\nexport type Card = {\n  label?: string;\n  labelKey?: string;\n  component: Function;\n};\n\nexport type TableColumn = any;\n\n/** Definition of a tab (options that can be passed when defining an extension tab enhancement) */\nexport type Tab = {\n  name: string;\n  label?: string;\n  labelKey?: string;\n  tooltipKey?: string;\n  tooltip?: string;\n  showHeader?: boolean;\n  weight?: number;\n  component: Function;\n};\n\n/** Definition of the locationConfig object (used in extensions) */\nexport type LocationConfig = {\n  product?: string[],\n  resource?: string[],\n  namespace?: string[],\n  cluster?: string[],\n  id?: string[],\n  mode?: string[],\n  hash?: string[],\n  /**\n   * path match from URL (excludes host address)\n   */\n  path?: { [key: string]: string | boolean}[],\n  /**\n   * Query Params from URL\n   */\n  queryParam?: { [key: string]: string},\n  /**\n   * Context specific params.\n   *\n   * Components can provide additional context specific params that this value must match\n   */\n  context?: { [key: string]: string},\n};\n\n/**\n * Environment metadata that extensions can access\n */\nexport type ExtensionEnvironment = {\n  version: string;\n  commit: string;\n  isPrime: boolean;\n  docsVersion: string; /** e.g. 'v2.10' */\n};\n\nexport interface ProductOptions {\n  /**\n   * The category this product belongs under. i.e. 'config'\n   */\n  category?: string;\n\n  /**\n   * Hide the Copy KubeConfig button in the header\n   */\n  hideCopyConfig?: boolean;\n\n  /**\n   * Hide the Download KubeConfig button in the header\n   */\n  hideKubeConfig?: boolean;\n\n  /**\n   * Hide the Kubectl Shell button in the header\n   */\n  hideKubeShell?: boolean;\n\n  /**\n   * Hide the Namespace location\n   */\n  hideNamespaceLocation?: boolean;\n\n  /**\n   * Hide the system resources\n   */\n\n  hideSystemResources?: boolean;\n  /**\n   * The icon that should be displayed beside this item in the navigation.\n   */\n  icon?: string,\n\n  /**\n   * Only load the product if the feature is present\n   */\n  ifFeature?: string | RegExp;\n\n  /**\n   * Only load the product if the type is present\n   */\n  ifHave?: string;\n\n  /**\n   * Only load the product if the group is present\n   */\n  ifHaveGroup?: string | RegExp;\n\n  /**\n   * Only load the product if the type is present\n   */\n  ifHaveType?: string | RegExp;\n\n  /**\n   * The vuex store that this product should use by default i.e. 'management'\n   */\n  inStore?: string;\n\n  /**\n   * Show the cluster switcher in the navigation\n   */\n  showClusterSwitcher?: boolean;\n\n  /**\n   * Show the namespace filter in the header\n   */\n  showNamespaceFilter?: boolean;\n\n  /**\n   * A number used to determine where in navigation this item will be placed. The highest number will be at the top of the list.\n   */\n  weight?: number;\n\n  /**\n   * The route that the product will lead to if click on in navigation.\n   */\n  to?: PluginRouteRecordRaw;\n\n  /**\n   * Alternative to the icon property. Uses require\n   */\n  svg?: Function;\n\n  /**\n   * Product name\n   */\n  name?: string;\n\n  /**\n   * Leaving these here for completeness but I don't think these should be advertised as useable to plugin creators.\n   */\n  // ifHaveVerb: string | RegExp;\n  // removable: string;\n  // showWorkspaceSwitcher: boolean;\n  // supportRoute: string;\n  // typeStoreMap: string;\n}\n\nexport interface HeaderOptions {\n  /**\n   * Name of the header. This should be unique.\n   */\n  name?: string;\n\n  /**\n   * A string that will show in the table column as a header\n   */\n  label?: string;\n\n  /**\n   * A translation key where the resulting string will show in the table column as a header\n   */\n  labelKey?: string;\n\n  /**\n   * A string which represents the path to access the value from the row object i.e. `row.meta.value`.\n   */\n  value?: string;\n\n  /**\n   * A string which represents the path to access the value from the row object which we'll use to sort i.e. `row.meta.value`\n   */\n  sort?: string | string[];\n\n  /**\n   * A string which represents the path to access the value from the row object which we'll use to search i.e. `row.meta.value`.\n   * It can be false to disable searching on this field\n   */\n  search?: string | boolean;\n\n  /**\n   * Number of pixels the column should be in the table\n   */\n  width?: number;\n\n  /**\n   * The name of a custom formatter. The available formatters can bee seen in `@rancher/shell/components/formatter`\n   */\n  formatter?: string;\n\n  /**\n   * These options are dependent on the formatter that's chosen. Examples can be seen in `@rancher/shell/components/formatter` and `@rancher/shell/config/table-headers`\n   */\n  formatterOpts?: any;\n\n  /**\n   * Provide a function which accets a row and returns the value that should be displayed in the column\n   * @param row This can be any value which represents the row\n   * @returns Can return {@link string | number | null | undefined} to display in the column\n   */\n  getValue?: (row: any) => string | number | null | undefined;\n}\n\nexport interface ConfigureTypeOptions {\n  /**\n   * The resource can edit/show yaml\n   */\n  canYaml?: boolean;\n\n  /**\n   * Modify the way the name looks when displayed\n   */\n  displayName?: string;\n\n  /**\n   * New resources can be created of this type\n   */\n  isCreatable?: boolean;\n\n  /**\n   * Resources of this type can be deleted/removed\n   */\n  isRemovable?: boolean;\n\n  /**\n   * Resources of this type can be edited\n   */\n  isEditable?: boolean;\n\n  /**\n   * This type should be grouped by namespaces when displayed in a table\n   */\n  namespaced?: boolean;\n\n  /**\n   * Show the age column in when displaying this type in a table\n   */\n  showAge?: boolean;\n\n   /**\n   * Show the masthead at the top of the list view of this type\n   */\n  showListMasthead?: boolean;\n\n   /**\n   * Show the state column in when displaying this type in a table\n   */\n  showState?: boolean;\n\n  /**\n   * Define where this type/page should navigate to (menu entry routing)\n   */\n  customRoute?: Object;\n\n  /**\n   * Leaving these here for completeness but I don't think these should be advertised as useable to plugin creators.\n   */\n  // alias\n  // depaginate\n  // graphConfig\n  // hasGraph\n  // limit\n  // listGroups\n  // localOnly\n  // location\n  // match\n  // realResource\n  // resource\n  // resourceDetail\n  // resourceEdit\n  // showConfigView\n}\n\nexport interface ConfigureVirtualTypeOptions extends ConfigureTypeOptions {\n  /**\n   * Only load the product if the type is present\n   */\n  ifHave?: string;\n\n  /**\n   * Only load the product if the type is present\n   */\n  ifHaveType?: string | RegExp | Object;\n\n  /**\n   * The label that this type should display\n   */\n  label?: string;\n\n  /**\n   * The translation key displayed anywhere this type is referenced\n   */\n  labelKey?: string;\n\n  /**\n   * An identifier that should be unique across all types\n   */\n  name: string;\n\n  /**\n   * The route that this type should correspond to {@link PluginRouteRecordRaw} {@link RouteRecordRaw}\n   */\n  route: PluginRouteRecordRaw | RouteRecordRaw | Object;\n}\n\nexport interface DSLReturnType {\n  /**\n   * Register multiple types by name and place them all in a group if desired. Primarily used for grouping things in the cluster explorer navigation.\n   * @param types A list of types that are going to be registered\n   * @param group Conditionally a group you want to places all the types in\n   * @returns {@link void}\n   */\n  basicType: (types: string[], group?: string) => void;\n\n  /**\n   * Configure a myriad of options for the specified type\n   * @param type The type to be configured\n   * @param options {@link ConfigureTypeOptions}\n   * @returns {@link void}\n   */\n  configureType: (type: string, options: ConfigureTypeOptions) => void;\n\n  /**\n   * Register the headers/columns that should be used when rendering a table for the specified type.\n   * @param type The type you'd like to register headers/columns for.\n   * @param headers {@link HeaderOptions[]}\n   * @returns {@link void}\n   */\n  headers: (type: string, headers: HeaderOptions[]) => void;\n\n  /**\n   * Create and register a new product\n   * @param options {@link ProductOptions}\n   * @returns {@link void}\n   */\n  product: (options: ProductOptions) => void;\n\n  /**\n   * Create and label a group. The group will show up in navigation\n   * @param groupNane Name of the group\n   * @param label Label in navigation\n   * @returns {@link void}\n   */\n  mapGroup: (groupName: string, label: string) => void;\n\n  /**\n   * Create and configure a myriad of options for a type\n   * @param options {@link ConfigureVirtualTypeOptions}\n   * @returns {@link void}\n   */\n  virtualType: (options: ConfigureVirtualTypeOptions) => void;\n\n  /**\n   * Side menu ordering for grouping of pages\n   * @param input Name of the group\n   * @param weight Ordering to be applied for the specified group\n   * @param forBasic Apply to basic type instead of regular type tree\n   * @returns {@link void}\n   */\n  weightGroup: (input: string, weight: number, forBasic: boolean) => void;\n\n  /**\n   * Side menu ordering for simple pages\n   * @param input Name of the page/resource\n   * @param weight Ordering to be applied for the specified page/resource\n   * @param forBasic Apply to basic type instead of regular type tree\n   * @returns {@link void}\n   */\n  weightType: (input: string, weight: number, forBasic: boolean) => void;\n\n  /**\n   * Leaving these here for completeness but I don't think these should be advertised as useable to plugin creators.\n   */\n  // componentForType: (type: string, replacementType: string)\n  // groupBy: (type: string, field: string)\n  // hideBulkActions: (type: string, field)\n  // ignoreGroup: (regexOrString)\n  // ignoreType: (regexOrString)\n  //\n  // mapType: (match, replace)\n  // moveType: (match, group)\n  // setGroupDefaultType: (input, defaultType)\n  // spoofedType: (obj)\n}\n\n/**\n * Context for the constructor of a model extension\n */\nexport type ModelExtensionContext = {\n  /**\n   * Dispatch vuex actions\n   */\n  dispatch: any,\n  /**\n   * Get from vuex store\n   */\n  getters: any,\n  /**\n   * Used to make http requests\n   */\n  axios: any,\n  /**\n   * Definition of the extension\n   */\n  $plugin: any,\n  /**\n   * Function to retrieve a localised string\n   */\n  t: (key: string) => string,\n};\n\n/**\n * Constructor signature for a model extension\n */\nexport type ModelExtensionConstructor = (context: ModelExtensionContext) => Object;\n\n/**\n * Interface for a Dashboard plugin\n */\nexport interface IPlugin {\n  /**\n   * Add a product\n   * @param importFn Function that will import the module containing a product definition\n   */\n  addProduct(importFn: ProductFunction): void;\n\n  /**\n   * Add a locale to the i18n store\n   * @param locale Locale id (e.g. en-us)\n   * @param label Label for the locale to be displayed in the i18n chooser\n   */\n  addLocale(locale: string, label: string): void;\n\n  /**\n   * Plugin metadata\n   */\n  metadata: PackageMetadata;\n\n  /**\n   * Validators used in the same manner as shell/utils/custom-validators\n   */\n  validators: {[key: string]: Function};\n\n  /**\n   * Add a module containing localisations for a specific locale\n   */\n  addL10n(locale: string, fn: Function): void;\n\n  /**\n   * Add a route to the Vue Router\n   */\n  addRoute(route: RouteRecordRaw): void;\n  addRoute(parent: string, route: RouteRecordRaw): void;\n\n  /**\n   * Adds an action/button to the UI\n   */\n  addAction(where: ActionLocation | string, when: LocationConfig | string, action: Action): void;\n\n  /**\n   * Adds a tab to the UI (ResourceTabs component)\n   */\n  addTab(where: TabLocation | string, when: LocationConfig | string, action: Tab): void;\n\n  /**\n   * Adds a panel/component to the UI\n   */\n  addPanel(where: PanelLocation | string, when: LocationConfig | string, action: Panel): void;\n\n  /**\n   * Adds a card to the UI\n   */\n  addCard(where: CardLocation | string, when: LocationConfig | string, action: Card): void;\n\n  /**\n   * Adds a new column to the SortableTable component\n   */\n  addTableColumn(where: TableColumnLocation | string, when: LocationConfig | string, action: TableColumn): void;\n\n  /**\n   * Set the component to use for the landing home page\n   * @param component Home page component\n   */\n  setHomePage(component: any): void;\n\n  /**\n   * Add routes to the Vue Router\n   */\n  addRoutes(routes: PluginRouteRecordRaw[] | RouteRecordRaw[]): void;\n\n   /**\n    * Add a hook to be called when the plugin is uninstalled\n    * @param hook Function to call when the plugin is uninstalled\n    */\n  addUninstallHook(hook: Function): void;\n\n  /**\n   * Add a generic Vuex Store\n   */\n  addStore(storeName: string, register: RegisterStore, unregister: UnregisterStore): void;\n  /**\n   * Add a dashboard Vuex store.\n   *\n   * This will contain the toolset (getters/mutations/actions/etc) required by the dashboard to support Dashboard components. Most of these\n   * will be automatically supplemented when the store is registered, others though will need to be provided to supply package specific\n   * functionality (see storeSpecifics). For instance a component may request to fetch all of a resource type which, via a number of generic\n   * actions, will eventually call a `request` action which will make the raw http request. This is a pkg specific feature so needs the\n   * `request` action needs to be supplied in the `storeSpecifics`\n   */\n  addDashboardStore(storeName: string, storeSpecifics: CoreStoreSpecifics, config: CoreStoreConfig, init?: CoreStoreInit): void;\n\n  /**\n   * Add hooks that will execute when a user navigates\n   * - to a route owned by this package\n   * - from a route owned by this package\n   */\n  addNavHooks(\n    onEnter?: OnNavToPackage,\n    onLeave?: OnNavAwayFromPackage,\n    onLogOut?: OnLogOut\n  ): void;\n\n  /**\n   * Adds a model extension\n   * @experimental May change or be removed in the future\n   *\n   * @param type Model type\n   * @param clz  Class for the model extension (constructor)\n   */\n  addModelExtension(type: string, clz: ModelExtensionConstructor): void;\n\n  /**\n   * Register 'something' that can be dynamically loaded - e.g. model, edit, create, list, i18n\n   * @param {String} type type of thing to register, e.g. 'edit'\n   * @param {String} name unique name of 'something'\n   * @param {Function} fn function that dynamically loads the module for the thing being registered\n   */\n  register(type: string, name: string, fn: Function | Boolean): void;\n\n  /**\n   * Will return all of the configuration functions used for creating a new product.\n   * @param store The store that was passed to the function that's passed to `plugin.addProduct(function)`\n   * @param productName The name of the new product. This name is displayed in the navigation.\n   */\n  DSL(store: any, productName: string): DSLReturnType;\n\n  /**\n   * Get information about the Extension Environment\n   */\n  get environment(): ExtensionEnvironment;\n}\n\n// Internal interface\n// Built-in extensions may use this, but external extensions should not, as this is subject to change\n// Defined as any for now\nexport type IInternal = any;\n","export function importTypes($plugin) { \n  $plugin.register('l10n', 'en-us', () => import('@pkg/l10n/en-us.yaml'));\n  $plugin.register('dialog', 'AddFleetMemberDialog', () => import(/* webpackChunkName: \"dialog\" */'@pkg/dialog/AddFleetMemberDialog.vue'));\n};\n","import {importTypes} from '@rancher/auto-import';\nimport {IPlugin, TabLocation} from '@shell/core/types';\n\n// Init the package\nexport default function (plugin: IPlugin): void {\n    // Auto-import model, detail, edit from the folders\n    importTypes(plugin);\n\n    // Provide plugin metadata from package.json\n    plugin.metadata = require('./package.json');\n\n    // Load a product\n    // plugin.addProduct(require('./product'));\n    plugin.addTab(\n        TabLocation.RESOURCE_DETAIL,\n        {resource: ['management.cattle.io.fleetworkspace']},\n        {\n            name: 'users',\n            labelKey: 'fleet-workspace-ui.manageUsers',\n            label: 'manage-users',\n            weight: -2,\n            showHeader: true,\n            component: () => import('./components/FleetMembershipEditor.vue')\n        }\n    );\n}\n","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__9274__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","id","loaded","__webpack_modules__","call","m","n","getter","__esModule","d","a","leafPrototypes","getProto","Object","getPrototypeOf","obj","__proto__","t","value","mode","then","ns","create","r","def","current","indexOf","getOwnPropertyNames","forEach","key","definition","o","defineProperty","enumerable","get","f","e","chunkId","Promise","all","keys","reduce","promises","u","g","globalThis","Function","window","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","url","done","push","script","needAttach","scripts","document","getElementsByTagName","i","length","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","fn","setTimeout","bind","type","target","head","appendChild","Symbol","toStringTag","nmd","paths","children","p","installedChunks","j","installedChunkData","promise","resolve","reject","error","Error","loadingEnded","errorType","realSrc","message","name","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","currentScript","match","ExtensionPoint","ActionLocation","PanelLocation","TabLocation","CardLocation","TableColumnLocation","importTypes","$plugin","register","plugin","metadata","addTab","RESOURCE_DETAIL","resource","labelKey","label","weight","showHeader","component"],"sourceRoot":""}